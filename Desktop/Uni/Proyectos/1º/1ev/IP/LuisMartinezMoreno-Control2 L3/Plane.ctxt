#BlueJ class context
comment0.params=
comment0.target=Plane()
comment0.text=\r\n\ Plane\ Constructor\r\n\r\n
comment1.params=newPiloto\ newIdentifier\ newFuel
comment1.target=Plane(Person,\ char,\ int)
comment1.text=\r\nConstructor\ con\ nuevo\ piloto,\ identificador\ del\ avion\ y\ cantidad\ de\ combustible\ \r\n\ \r\n
comment10.params=
comment10.target=double\ getEngineLever()
comment10.text=\r\n\ Method\ getEngineLever\r\n\r\n\ @return\ The\ return\ value\r\n
comment11.params=newYPos
comment11.target=void\ setYPos(int)
comment11.text=\r\n\ Method\ setYPos\r\n\r\n\ @param\ newYPos\ A\ parameter\r\n
comment12.params=newPiloto
comment12.target=void\ setPilot(Person)
comment12.text=\r\n\ Method\ setPilot\r\n\ setter\ para\ piloto\r\n\r\n\ @param\ newPiloto\ A\ parameter\r\n
comment13.params=
comment13.target=Person\ getPiloto()
comment13.text=\r\n\ Method\ getPiloto\r\n\ getter\ para\ el\ piloto\r\n\r\n\ @return\ The\ return\ value\r\n
comment14.params=
comment14.target=int\ getYPos()
comment14.text=\r\n\ Method\ getYPos\r\n\r\n\ @return\ The\ return\ value\r\n
comment15.params=newXPos
comment15.target=void\ setXPos(int)
comment15.text=\r\n\ Method\ setXPos\r\n\r\n\ @param\ newXPos\ A\ parameter\r\n
comment16.params=
comment16.target=int\ getXPos()
comment16.text=\r\n\ Method\ getXPos\r\n\r\n\ @return\ The\ return\ value\r\n
comment17.params=newXSpeed\ newYSpeed
comment17.target=void\ accelerate(int,\ int)
comment17.text=\r\n\ Method\ accelerate\r\n\ Aumenta\ la\ velocidad\ en\ x\ y\ en\ y\ simultaneamente\ si\ se\ cumplen\ los\ valores\ \r\n\r\n\ @param\ newXSpeed\ A\ parameter\r\n\ @param\ newYSpeed\ A\ parameter\r\n
comment18.params=newXSpeed
comment18.target=void\ setXSpeed(int)
comment18.text=\r\n\ Method\ setXSpeed\r\n\r\n\ @param\ newXSpeed\ A\ parameter\r\n
comment19.params=
comment19.target=int\ getXSpeed()
comment19.text=\r\n\ Method\ getXSpeed\r\n\r\n\ @return\ The\ return\ value\r\n
comment2.params=setEngineLever
comment2.target=Plane(double)
comment2.text=\r\n\ Plane\ Constructor\r\nLimita\ la\ posicion\ de\ la\ palanca\r\n\ @param\ setEngineLever\ A\ parameter\r\n
comment20.params=newYSpeed
comment20.target=void\ setYSpeed(int)
comment20.text=\r\n\ Method\ setYSpeed\r\n\r\n\ @param\ newYSpeed\ A\ parameter\r\n
comment21.params=
comment21.target=int\ getYSpeed()
comment21.text=\r\n\ Method\ getYSpeed\r\n\r\n\ @return\ The\ return\ value\r\n
comment22.params=newIdentifier
comment22.target=void\ setIdentifier(char)
comment22.text=\r\n\ Method\ setIdentifier\r\n\r\n\ @param\ newIdentifier\ A\ parameter\r\n
comment23.params=
comment23.target=char\ getIdentifier()
comment23.text=\r\n\ Method\ getIdentifier\r\n\r\n\ @return\ The\ return\ value\r\n
comment24.params=newFuel
comment24.target=void\ setFuel(int)
comment24.text=\r\n\ Method\ setFuel\r\n\r\n\ @param\ newFuel\ A\ parameter\r\n
comment25.params=
comment25.target=int\ getFuel()
comment25.text=\r\n\ Method\ getFuel\r\n\r\n\ @return\ The\ return\ value\r\n
comment26.params=
comment26.target=java.lang.String\ toString()
comment26.text=\r\n\ Method\ toString\r\n\r\n\ @return\ The\ return\ value\r\n
comment27.params=
comment27.target=java.lang.String\ getPilotoAsString()
comment27.text=\r\n\ Method\ getPilotoAsString\r\n\ devuelve\ el\ metodo\ getHashCode\ con\ todos\ los\ datos\ dl\ piloto\ si\ este\ esta\ presente\ y\ si\ no,\r\n\ devuelve\ "NO\ PILO\r\n\r\n\ @return\ The\ return\ value\r\n
comment3.params=newMotor
comment3.target=void\ setMotor(Engine)
comment3.text=\r\n\ Method\ setMotor\r\nSetter\ para\ el\ Engine\ motor\r\n\ @param\ newMotor\ A\ parameter\r\n
comment4.params=
comment4.target=Engine\ getMotor()
comment4.text=\r\n\ Method\ getMotor\r\nGetter\ para\ el\ Engine\ motor\r\n\ @return\ The\ return\ value\r\n
comment5.params=
comment5.target=Engine\ getRevolutions()
comment5.text=\r\n\ Method\ getRevolutions\r\nGetter\ para\ las\ revoluciones\ del\ motor\r\n\ @return\ The\ return\ value\r\n
comment6.params=newRevolutions
comment6.target=void\ setRevolutions(double)
comment6.text=\r\n\ Method\ setRevolutions\r\nSetter\ para\ las\ revoluciones\ del\ motor\r\n\ @param\ newRevolutions\ A\ parameter\r\n
comment7.params=position
comment7.target=float\ moveEngineLever(float)
comment7.text=\r\n\ Method\ moveEngineLever\r\nSi\ el\ valor\ de\ position\ esta\ dentro\ de\ los\ correctos,\ este\ metodo\ cambiara\ \r\nla\ posicion\ de\ la\ palanca(igual\ position)y\ las\ revoluciones(igual\ a\ la\ formula\ puesta\ en\ la\ pizarra)\r\n\ @param\ position\ A\ parameter\r\n\ @return\ The\ return\ value\r\n
comment8.params=
comment8.target=boolean\ fly()
comment8.text=\r\n\ Metodo\ que\ dependiendo\ del\ combustible\ varia\ la\ posicion\ del\ avion\r\n\ \r\n
comment9.params=newEngineLever
comment9.target=void\ setEngineLever(double)
comment9.text=\r\n\ Method\ setEngineLever\r\n\r\n\ @param\ newEngineLever\ A\ parameter\r\n
numComments=28
